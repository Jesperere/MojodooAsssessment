@page "/todolists"
@page "/todolists/{id:int}"
@inject INoteService NoteService

@if(Id == null)
{
    <h3>Create new note</h3>
}
else
{
    <h3>Edit "@note.Todo"</h3>
}

<EditForm Model="note" OnSubmit="HandleSubmit">
    <div>
        <label for="todo">Note</label>
        <InputText id="todo" @bind-Value="note.Todo" class="form-control"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>

    @if (Id != null)
    {
    
    <button type="button" class="btn btn-danger" @onclick="DeleteNote">Delete Note</button>   
    }
    
</EditForm>





@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;


    Note note = new Note();

    protected override void OnInitialized()
    {
        btnText = Id == null ? "Save new note" : "Update note";
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id != null)
        {
            note = await NoteService.GetSingleNote((int)Id);          
        }
    }


    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await NoteService.CreateNote(note);
        }
        else
        {
            await NoteService.UpdateNote(note, (int)Id);
        }
    }

    async Task DeleteNote()
    {
        await NoteService.DeleteNote(note.Id);
    }

}
